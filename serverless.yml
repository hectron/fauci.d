# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: faucid

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '2'

provider:
  name: aws
  runtime: go1.x
  lambdaHashingVersion: 20201221
  region: us-east-2

# you can overwrite defaults here
#  stage: dev
#  region: us-east-1

  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "lambda:InvokeFunction"
          Resource:
            - arn:aws:lambda:us-east-2:*:*
# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1
  environment:
    LAMBDA: true
    MAPBOX_API_TOKEN: ${env:MAPBOX_API_TOKEN}
    MAPBOX_API_URL: ${env:MAPBOX_API_URL}
    VACCINE_API_URL: ${env:VACCINE_API_URL}
    SENTRY_DSN: ${env:SENTRY_DSN}
    SENTRY_RELEASE: ${env:SENTRY_RELEASE}
    SENTRY_ENVIRONMENT: production

package:
  patterns:
    - '!./**'
    - ./bin/**

functions:
  # Currently, every Slack slash command goes directly to this event handler
  # In the future, if we decide to add another chat-bot such as a Discord bot,
  # we can add another function to specifically handle that.
  slackbot:
    handler: bin/slackbot_handler
    events:
      - http:
          path: /slackbot
          method: post
    environment:
      SLACK_API_TOKEN: ${env:SLACK_API_TOKEN}

  slackbot_backend:
    handler: bin/slackbot_backend
    events:
      - http:
          path: /slackbot/backend
          method: post
    timeout: 15 # seconds, default is 6
    environment:
      SLACK_API_TOKEN: ${env:SLACK_API_TOKEN}

#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
# events:
#    events:
#      - httpApi:
#          path: /users/create
#          method: get
#      - websocket: $connect
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill: amzn1.ask.skill.xx-xx-xx-xx
#      - alexaSmartHome: amzn1.ask.skill.xx-xx-xx-xx
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"
#      - cloudwatchEvent:
#          event:
#            source:
#              - "aws.ec2"
#            detail-type:
#              - "EC2 Instance State-change Notification"
#            detail:
#              state:
#                - pending
#      - cloudwatchLog: '/aws/lambda/hello'
#      - cognitoUserPool:
#          pool: MyUserPool
#          trigger: PreSignUp
#      - alb:
#          listenerArn: arn:aws:elasticloadbalancing:us-east-1:XXXXXX:listener/app/my-load-balancer/50dc6c495c0c9188/
#          priority: 1
#          conditions:
#            host: example.com
#            path: /hello

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
